[package]
name = "openvm-pairing-circuit"
description = "OpenVM circuit extension for elliptic curve pairing"
version.workspace = true
authors.workspace = true
edition.workspace = true
homepage.workspace = true
repository.workspace = true

[dependencies]
openvm-circuit-primitives-derive = { workspace = true }
openvm-circuit-primitives = { workspace = true }
openvm-circuit-derive = { workspace = true }
openvm-circuit = { workspace = true }
openvm-ecc-guest = { workspace = true }
openvm-pairing-guest = { workspace = true, features = [
    "halo2curves",
    "bls12_381",
    "bn254",
] }
openvm-instructions = { workspace = true }
openvm-mod-circuit-builder = { workspace = true }
openvm-stark-backend = { workspace = true }
openvm-rv32im-circuit = { workspace = true }
openvm-algebra-circuit = { workspace = true }
openvm-rv32-adapters = { workspace = true }
openvm-ecc-circuit = { workspace = true }
openvm-pairing-transpiler = { workspace = true }

num-bigint = { workspace = true }
num-traits = { workspace = true }
strum = { workspace = true }
derive_more = { workspace = true }
derive-new = { workspace = true }
once_cell = { workspace = true }
rand = { workspace = true }
itertools = { workspace = true }
eyre = { workspace = true }
serde = { workspace = true, features = ["derive", "std"] }

[target.'cfg(not(target_os = "zkvm"))'.dependencies]
openvm-pairing-guest = { workspace = true }

[dev-dependencies]
openvm-stark-sdk = { workspace = true }
openvm-mod-circuit-builder = { workspace = true, features = ["test-utils"] }
openvm-circuit = { workspace = true, features = ["test-utils"] }
openvm-rv32-adapters = { workspace = true, features = ["test-utils"] }
halo2curves-axiom = { workspace = true }
openvm-ecc-guest = { workspace = true }
openvm-pairing-guest = { workspace = true, features = [
    "halo2curves",
    "bls12_381",
    "bn254",
] }
